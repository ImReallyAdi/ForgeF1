[
	{
		"name": "raceWeekend",
		"version": "1.0.0",
		"description": "Emitted when a race weekend is upcoming or currently active. Payload contains circuit info and schedule (practice, qualifying, sprint, race).",
		"examples": ["emit('raceWeekend', { circuit: {...}, schedule: {...} })"],
		"scope": "extension"
	},
	{
		"name": "raceResult",
		"version": "1.0.0",
		"description": "Emitted after a race completes with full race results (positions, drivers, constructors, points, fastest laps).",
		"examples": ["emit('raceResult', { season: 2025, round: 10, results: [...] })"],
		"scope": "extension"
	},
	{
		"name": "qualifying",
		"version": "1.0.0",
		"description": "Emitted after qualifying results are available (Q1/Q2/Q3 times and final grid positions).",
		"examples": ["emit('qualifying', { season: 2025, round: 10, results: [...] })"],
		"scope": "extension"
	},
	{
		"name": "driverStanding",
		"version": "1.0.0",
		"description": "Emitted when driver standings are updated. Payload contains driver info, position, points, and wins.",
		"examples": ["emit('driverStanding', { driver: {...}, position: 1, points: 345 })"],
		"scope": "extension"
	},
	{
		"name": "constructorStanding",
		"version": "1.0.0",
		"description": "Emitted when constructor standings are updated. Payload contains constructor info, position, points, and wins.",
		"examples": ["emit('constructorStanding', { constructor: {...}, position: 1, points: 512 })"],
		"scope": "extension"
	},
	{
		"name": "error",
		"version": "1.0.0",
		"description": "Emitted when an internal error occurs inside the extension.",
		"examples": ["emit('error', new Error('...'))"],
		"scope": "extension"
	}
]